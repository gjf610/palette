{"version":3,"sources":["move.js"],"names":["getStyle","obj","name","currentStyle","getComputedStyle","startMove","json","fnEnd","clearInterval","timer","setInterval","bStop","attr","cur","Math","round","parseFloat","parseInt","speed","ceil","floor","style","filter","opacity"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,CAAkBC,GAAlB,EAAuBC,IAAvB,EAA6B;AACzB,MAAID,GAAG,CAACE,YAAR,EAAsB;AAClB,WAAOF,GAAG,CAACE,YAAJ,CAAiBD,IAAjB,CAAP;AACH,GAFD,MAGK;AACD,WAAOE,gBAAgB,CAACH,GAAD,EAAM,KAAN,CAAhB,CAA6BC,IAA7B,CAAP;AACH;AACJ,EAGD;;;AAGA,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACJ,GAAD,EAAMK,IAAN,EAAYC,KAAZ,EAAsB;AACpCC,EAAAA,aAAa,CAACP,GAAG,CAACQ,KAAL,CAAb;AACAR,EAAAA,GAAG,CAACQ,KAAJ,GAAYC,WAAW,CAAC,YAAY;AAChC,QAAIC,KAAK,GAAG,IAAZ,CADgC,CACb;;AAEnB,SAAK,IAAIC,IAAT,IAAiBN,IAAjB,EAAuB;AACnB,UAAIO,GAAG,GAAG,CAAV,CADmB,CACP;;AAEZ,UAAID,IAAI,IAAI,SAAZ,EAAuB;AACnBC,QAAAA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,UAAU,CAAChB,QAAQ,CAACC,GAAD,EAAMW,IAAN,CAAT,CAAV,GAAkC,GAA7C,CAAN;AACH,OAFD,MAGK;AACDC,QAAAA,GAAG,GAAGI,QAAQ,CAACjB,QAAQ,CAACC,GAAD,EAAMW,IAAN,CAAT,CAAd;AACH;;AAED,UAAIM,KAAK,GAAG,CAACZ,IAAI,CAACM,IAAD,CAAJ,GAAaC,GAAd,IAAqB,CAAjC;AACAK,MAAAA,KAAK,GAAGA,KAAK,GAAG,CAAR,GAAYJ,IAAI,CAACK,IAAL,CAAUD,KAAV,CAAZ,GAA+BJ,IAAI,CAACM,KAAL,CAAWF,KAAX,CAAvC;AAEA,UAAIL,GAAG,IAAIP,IAAI,CAACM,IAAD,CAAf,EACID,KAAK,GAAG,KAAR,CAde,CAcD;;AAElB,UAAIC,IAAI,IAAI,SAAZ,EAAuB;AACnBX,QAAAA,GAAG,CAACoB,KAAJ,CAAUC,MAAV,GAAmB,oBAAoBT,GAAG,GAAGK,KAA1B,IAAmC,GAAtD;AACAjB,QAAAA,GAAG,CAACoB,KAAJ,CAAUE,OAAV,GAAoB,CAACV,GAAG,GAAGK,KAAP,IAAgB,GAApC;AACH,OAHD,MAIK;AACDjB,QAAAA,GAAG,CAACoB,KAAJ,CAAUT,IAAV,IAAkBC,GAAG,GAAGK,KAAN,GAAc,IAAhC;AACH;AACJ;;AAED,QAAIP,KAAJ,EAAW;AACPH,MAAAA,aAAa,CAACP,GAAG,CAACQ,KAAL,CAAb;AAEA,UAAIF,KAAJ,EAAWA,KAAK;AACnB;AACJ,GAjCsB,EAiCpB,EAjCoB,CAAvB;AAkCH,CApCD;;eAsCeF","file":"move.dd230015.js","sourceRoot":"..\\src","sourcesContent":["// 完美运动框架 利用json进行多物体多属性同时运动\r\n// 演变过程：\r\n// startMove(iTarget)                  运动框架\r\n// startMove(obj,iTarget)              多物体\r\n// startMove(obj,attr,iTarget)         任意值\r\n// startMove(obj,attr,iTarget,fnEnd)   前一次运动结束后触发函数\r\n// startMove(obj,json,fnEnd)           完美运动框架\r\nfunction getStyle(obj, name) {\r\n    if (obj.currentStyle) {\r\n        return obj.currentStyle[name];\r\n    }\r\n    else {\r\n        return getComputedStyle(obj, false)[name];\r\n    }\r\n}\r\n\r\n\r\n//startMove(oDiv, {width: 400, height: 400})\r\n\r\n\r\nconst startMove = (obj, json, fnEnd) => {\r\n    clearInterval(obj.timer);\r\n    obj.timer = setInterval(function () {\r\n        var bStop = true;\t\t//假设：所有值都已经到了\r\n\r\n        for (var attr in json) {\r\n            var cur = 0;//解决offset的bug\r\n\r\n            if (attr == 'opacity') {\r\n                cur = Math.round(parseFloat(getStyle(obj, attr)) * 100);\r\n            }\r\n            else {\r\n                cur = parseInt(getStyle(obj, attr));\r\n            }\r\n\r\n            var speed = (json[attr] - cur) / 6;\r\n            speed = speed > 0 ? Math.ceil(speed) : Math.floor(speed);\r\n\r\n            if (cur != json[attr])\r\n                bStop = false;//有某一属性未到达目标值\r\n\r\n            if (attr == 'opacity') {\r\n                obj.style.filter = 'alpha(opacity:' + (cur + speed) + ')';\r\n                obj.style.opacity = (cur + speed) / 100;\r\n            }\r\n            else {\r\n                obj.style[attr] = cur + speed + 'px';\r\n            }\r\n        }\r\n\r\n        if (bStop) {\r\n            clearInterval(obj.timer);\r\n\r\n            if (fnEnd) fnEnd();\r\n        }\r\n    }, 30);\r\n}\r\n\r\nexport default startMove"]}